{"uuid":"ae49c0b7-dfa6-4605-b57b-63ecc9e3a62f","historyId":"51fa97574deb01406ea88b07a53b0185","testCaseId":"981c5610faaf5e31feff2a838845a5","fullName":"src/test/resources/features/payflow.feature:5","labels":[{"name":"host","value":"LAPTOP-JI6I8DAU"},{"name":"thread","value":"4608@LAPTOP-JI6I8DAU.main(1)"},{"name":"feature","value":"Prueba de integracion Wompi"},{"name":"story","value":"Transaccion con cuenta nequi"},{"name":"suite","value":"Prueba de integracion Wompi"},{"name":"testClass","value":"Transaccion con cuenta nequi"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///C:/Users/Jose%20R/git/Wompi/src/test/resources/features/payflow.feature"},{"name":"package","value":"src.test.resources.features.payflow_feature.Prueba de integracion Wompi"}],"links":[],"name":"Transaccion con cuenta nequi","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected:<201> but was:<422>","trace":"java.lang.AssertionError: expected:<201> but was:<422>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat stepdefinitions.PayFlowSteps.se_crea_la_transaccion_con_la_siguiente_informacion(PayFlowSteps.java:63)\r\n\tat ✽.se crea la transaccion con la siguiente informacion(file:///C:/Users/Jose%20R/git/Wompi/src/test/resources/features/payflow.feature:10)\r\n"},"stage":"finished","description":"\tComo integrador de Wompi\n  Quiero probar la funcionalidad de transacciones con Nequi\n  Para asegurar que los flujos funcionan correctamente en el sistema","steps":[{"name":"Given se crean los tokens de aceptacion prefirmados","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1735398180520,"stop":1735398182966},{"name":"When se solicita la informacion del metodo de pago con el numero \"3194560279\"","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1735398182967,"stop":1735398183678},{"name":"Then se chequea el estado de la suscripcion con un estado de \"APPROVED\"","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1735398183678,"stop":1735398184122},{"name":"Then se crea la fuente de pago para el usuario \"jose.rafa@example.com\"","status":"passed","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1735398184122,"stop":1735398184883},{"name":"When se crea la transaccion con la siguiente informacion","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"expected:<201> but was:<422>","trace":"java.lang.AssertionError: expected:<201> but was:<422>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat stepdefinitions.PayFlowSteps.se_crea_la_transaccion_con_la_siguiente_informacion(PayFlowSteps.java:63)\r\n\tat ✽.se crea la transaccion con la siguiente informacion(file:///C:/Users/Jose%20R/git/Wompi/src/test/resources/features/payflow.feature:10)\r\n"},"stage":"finished","steps":[],"attachments":[{"name":"Data table","source":"e89bad09-71ef-48a2-b3a9-6f82384a7517-attachment.csv","type":"text/tab-separated-values"}],"parameters":[],"start":1735398184883,"stop":1735398186004},{"name":"Then se ejecuta un evento y se obtiene informacion sobre la transaccion","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1735398186005,"stop":1735398186007}],"attachments":[],"parameters":[],"start":1735398180519,"stop":1735398186012}